/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as models from "../index.js";
import { MpesaFlowError } from "./mpesaflowerror.js";

export type ValidationErrorData = {
  error: models.ValidationErrorError;
};

export class ValidationError extends MpesaFlowError {
  error: models.ValidationErrorError;

  /** The original data that was passed to this error instance. */
  data$: ValidationErrorData;

  constructor(
    err: ValidationErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.error?.message
      || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ValidationError";
  }
}

/** @internal */
export const ValidationError$inboundSchema: z.ZodType<
  ValidationError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => models.ValidationErrorError$inboundSchema),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ValidationError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ValidationError$Outbound = {
  error: models.ValidationErrorError$Outbound;
};

/** @internal */
export const ValidationError$outboundSchema: z.ZodType<
  ValidationError$Outbound,
  z.ZodTypeDef,
  ValidationError
> = z.instanceof(ValidationError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() => models.ValidationErrorError$outboundSchema),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValidationError$ {
  /** @deprecated use `ValidationError$inboundSchema` instead. */
  export const inboundSchema = ValidationError$inboundSchema;
  /** @deprecated use `ValidationError$outboundSchema` instead. */
  export const outboundSchema = ValidationError$outboundSchema;
  /** @deprecated use `ValidationError$Outbound` instead. */
  export type Outbound = ValidationError$Outbound;
}
