/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionsGetOne } from "../funcs/transactionsGetOne.js";
import { transactionsList } from "../funcs/transactionsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Transactions extends ClientSDK {
  /**
   * List Transactions
   *
   * @remarks
   * List of all transactions in the business
   */
  async list(
    request?: operations.ListTransactionsRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListTransactionsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(transactionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Transaction
   *
   * @remarks
   * Get a transaction in the  business
   */
  async getOne(
    request: operations.GetTransactionRequest,
    options?: RequestOptions,
  ): Promise<models.TransactionResponse> {
    return unwrapAsync(transactionsGetOne(
      this,
      request,
      options,
    ));
  }
}
