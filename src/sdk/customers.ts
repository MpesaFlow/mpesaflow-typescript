/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersGetOne } from "../funcs/customersGetOne.js";
import { customersList } from "../funcs/customersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Customers extends ClientSDK {
  /**
   * List all customers
   *
   * @remarks
   * Get a list of all customers in the business
   */
  async list(
    request?: operations.ListCustomersRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListCustomersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(customersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a customer
   *
   * @remarks
   * Get a customer by their ID in the business
   */
  async getOne(
    request: operations.GetCustomerRequest,
    options?: RequestOptions,
  ): Promise<models.CustomerResponse> {
    return unwrapAsync(customersGetOne(
      this,
      request,
      options,
    ));
  }
}
